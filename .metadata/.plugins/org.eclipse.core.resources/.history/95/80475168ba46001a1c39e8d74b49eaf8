package cinema.DAO;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;


import cinema.Model.User;

public class UserDAO {
	
	
	public static User get(String username,String password) {
		
		Connection conn = ConnectionManager.getConnection();
		PreparedStatement pstmt = null;
		ResultSet rset=null;
		try {
			String query = "SELECT Id,Role from Users WHERE Username=? AND Password=? AND Deleted=?";
			System.out.println("BLABAL");
			pstmt=conn.prepareStatement(query);
			int index = 1;
			
			pstmt.setString(index ++, username);
			pstmt.setString(index ++, password);
			Boolean deleted = false;
			pstmt.setBoolean(index ++, deleted);
			System.out.println(pstmt);
			System.out.println("bb");
			rset=pstmt.executeQuery();
			
			System.out.println("BLABAL2");
			if(rset.next()) {
				int id = rset.getInt(1);
				User.Role role = User.Role.valueOf(rset.getString(2));
				System.out.println(role);
				
				System.out.println("babbaabab3");

				 
				return new User(id,username,role);
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		}finally{
			try {pstmt.close();} catch (Exception ex1) {ex1.printStackTrace();}
			try {rset.close();} catch (Exception ex1) {ex1.printStackTrace();}
			try {conn.close();} catch (Exception ex1) {ex1.printStackTrace();} 
			
		}
				
		return null;
	}

	public static User get(String username) {
		// TODO Auto-generated method stub
		Connection conn = ConnectionManager.getConnection();
		PreparedStatement pstmt = null;
		ResultSet rset=null;
		try {
			String query = "SELECT Id,Role from Users WHERE Username=? AND Deleted=?";
			System.out.println(query);
			pstmt=conn.prepareStatement(query);
			int index = 1;
			
			pstmt.setString(index ++, username);
			
			Boolean deleted = false;
			pstmt.setBoolean(index ++, deleted);
			System.out.println(pstmt);
			rset=pstmt.executeQuery();
			
			System.out.println("BLABAL2");
			if(rset.next()) {
				int id = rset.getInt(1);
				User.Role role = User.Role.valueOf(rset.getString(2));
				
				
				System.out.println(role);
				
				System.out.println("babbaabab3");

				 
				return new User(id,username,role);
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		}finally{
			try {pstmt.close();} catch (Exception ex1) {ex1.printStackTrace();}
			try {rset.close();} catch (Exception ex1) {ex1.printStackTrace();}
			try {conn.close();} catch (Exception ex1) {ex1.printStackTrace();} 
			
		}
				
		return null;
	}

	public static boolean add(User user) {
		
		ConnectionManager.open();
		Connection conn = ConnectionManager.getConnection();
		

		PreparedStatement pstmt = null;
		try {
			String query = "INSERT INTO Users (Username,Password,RegistrationDate,Role,Deleted)  VALUES (?,?,?,?,?)";
			
			pstmt=conn.prepareStatement("INSERT INTO Users (Username,Password,RegistrationDate,Role,Deleted)  VALUES (?,?,?,?,?)");
			
			int index = 1;
			pstmt.setString(index++, user.getUsername());
			pstmt.setString(index ++, user.getPassword());
			pstmt.setString(index++,  user.getRegistrationDate().toString());
			pstmt.setString(index++, user.getRole().toString());
			pstmt.setString(index++, "false");

			
			System.out.println(pstmt);

			return pstmt.executeUpdate() == 1;
		} catch (Exception ex) {
			ex.printStackTrace();
		} finally {
			try {pstmt.close();} catch (Exception ex1) {ex1.printStackTrace();}
			try {conn.close();} catch (Exception ex1) {ex1.printStackTrace();} 
		}
		return false;
		
	}
	

}
